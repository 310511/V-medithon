version: '3.8'

services:
  # PostgreSQL - Primary Database
  postgres:
    image: postgres:15-alpine
    container_name: medchain-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: medchain
      POSTGRES_USER: indian22162
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - medchain-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medchain_user -d medchain"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB - Document Database
  mongodb:
    image: mongo:7.0
    container_name: medchain-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: indian22162
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: medchain
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - medchain-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis - Cache Layer
  redis:
    image: redis:7.2-alpine
    container_name: medchain-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - medchain-network
    command: redis-server --appendonly yes --requirepass password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin - PostgreSQL Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: medchain-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: indian22162@medchain.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - medchain-network
    depends_on:
      - postgres

  # MongoDB Express - MongoDB Management (Optional)
  mongo-express:
    image: mongo-express:latest
    container_name: medchain-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: indian22162
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://indian22162:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: indian22162
      ME_CONFIG_BASICAUTH_PASSWORD: password
    ports:
      - "8081:8081"
    networks:
      - medchain-network
    depends_on:
      - mongodb

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  medchain-network:
    driver: bridge

